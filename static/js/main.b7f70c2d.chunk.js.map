{"version":3,"sources":["components/Square.js","components/Board.js","Game.js","index.js"],"names":["Square","props","className","class","onClick","value","Board","squareClass","i","winningline","line","includes","renderSquare","squares","status","total","board","push","createBoard","calculateWinner","lines","length","a","b","c","winner","Game","useState","xisnext","setXisnext","Array","fill","index","history","setHistory","stepNumber","setStepNumber","toggle","setToggle","newHistory","slice","current","winnerObject","locationArray","arr","moves","map","object","move","locationIndex","column","row","desc","jumpTo","step","concat","handleClick","type","onChange","reverse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7f70c2d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = (props) => {\n    return (\n      <button \n        className= {props.class}\n        onClick={props.onClick}\n        >\n        {props.value}\n      </button>\n    );\n  }\n\n  export default Square;","import React from 'react';\nimport Square from './Square'\n\nconst Board = (props) => {\n\n    const createBoard = (total) => {\n      let board = [];\n      for (let i = 0; i < total; i++) {\n        board.push(renderSquare(i));\n      }\n      return board;\n    }\n\n    const squareClass = (i) => {\n      if (props.winningline && props.winningline.line.includes(i)) {\n        return 'highlight ';  \n      }\n      return '';\n    }\n\n    const ifDraw = () => {\n      if (props.status.includes('DRAW')) {\n        return 'draw ';\n      }\n      return '';\n    }\n\n    const renderSquare = (i) => {\n      // const squareClass = \"square\";\n\n      return <Square \n        value={props.squares[i]}\n        onClick={() => props.onClick(i)}\n        key={i}\n        line={props.winningline}\n        class={squareClass(i) + 'square ' + ifDraw()}\n      />;\n    }\n  \n    return (\n      <div className=\"game-board\">\n        {createBoard(9)}\n      </div>\n    );\n  }\n\n  export default Board;","import React, { useState } from 'react';\nimport Board from './components/Board';\nimport './index.css';\n\nconst Game = () => {\n\n  // States & Variables\n  const [xisnext, setXisnext] = useState(true);\n  const [history, setHistory] = useState([{squares: Array(9).fill(null), index: 0}]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [toggle, setToggle] = useState(false);\n\n  const newHistory = history.slice(0, stepNumber + 1);\n  const current = history[stepNumber];\n  const winnerObject = calculateWinner(current.squares);\n  const locationArray = [[1,1],[2,1],[3,1],[1,2],[2,2],[3,2],[1,3],[2,3],[3,3]];\n\n  // Function handling what happens when a square is clicked\n  const handleClick = (i) => {\n\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    \n    squares[i] = xisnext ? 'X' : 'O';  \n    setXisnext(!xisnext);\n    setStepNumber(newHistory.length);\n    setHistory(newHistory.concat([{squares: squares, index: i}]));\n  }\n\n  // Controls the current status above the list of moves\n  let status;\n  if (winnerObject) {\n    status = 'Winner: ' + winnerObject.winner;\n  } else if (!current.squares.includes(null)) {\n    status = 'DRAW: No Winner :('\n  } else {\n    status = 'Next player: ' + (xisnext ? 'X' : 'O');\n  }\n\n  // Controls the list of moves & clicking them\n  const moves = history.map((object, move) => {\n    const locationIndex = object.index;\n    const column = locationArray[locationIndex][0];\n    const row = locationArray[locationIndex][1];\n    const desc = move ?\n      `Go to move #${move} (${column}, ${row})` :\n      `Go to game start`;\n    return (\n      <li key={move}>\n        <button \n          onClick={() => jumpTo(move)}\n          className={move === stepNumber ? 'selected-move' : 'not-selected'}\n        >\n          {desc}\n        </button>\n      </li>\n    );\n  });\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXisnext((step % 2) === 0);\n  }\n\n  // Controls the toggle and order of the list\n  const handleToggle = () => {\n    setToggle(!toggle);\n  }\n\n  const setOrder = (arr) => {\n    if (toggle) {\n      arr.reverse();\n    }\n    return arr;\n  }\n\n  // DISPLAYED\n  return (\n    <div className=\"game\">\n    <h1>Tic Tac Toe</h1>\n      <div className=\"game-details\">\n        <Board \n          squares={current.squares}\n          onClick={(i) => handleClick(i)}\n          winningline={winnerObject}\n          status={status}\n        />\n        <div className=\"game-info\">\n          <div><h2>{status}</h2></div>\n          <div className=\"toggle\">\n            <label className=\"switch\">\n              <input \n                type=\"checkbox\"\n                onChange={() => handleToggle()}\n              />\n              <span className=\"slider\"></span>\n            </label>\n            <p>Toggle Ascending | Descending</p>\n          </div>\n          <ol>{setOrder(moves)}</ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// ========================================\n// Calculating the winner\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          winner: squares[a],\n          line: lines[i],\n        }\n      }\n    }\n    return null;\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\n// ========================================\n\nReactDOM.render(<Game />, \n  document.getElementById('root'));"],"sourceRoot":""}